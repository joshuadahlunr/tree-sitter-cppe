#define fn auto

fn main(std::vector<std::string_view> args) -> int {
	std::vector<const std::string_view> worlds <- {"world", "世界"};
	// defer std::vector<const std::string_view>::~vector(worlds);
	// defer if(not worlds.empty()) 
	//	worlds.clear();

	for(auto w in worlds)
		std::cout << w << "\n";
	std::cout << std::flush;

	auto x = outer: while(true) {
		inner: while(true){
			break outer;
			5
		}
	};// == std::vector<std::vector<int>> x = {}

	auto x = {
		std::cout << "This is a nested print" << std::endl;
		5
	};

	auto y = switch(x){
		case 5 => 4;
		case 4 => 5;
		default: break;
	};

	auto f = ([] => (int)5;);
}

size_t f() => 5;